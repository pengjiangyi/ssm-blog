<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.dao.ArticleMapper">
	<resultMap id="BaseResultMap" type="com.ssm.pojo.Article">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="des" property="des" jdbcType="VARCHAR" />
		<result column="keywords" property="keywords" jdbcType="VARCHAR" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="tagid" property="tagid" jdbcType="INTEGER" />
		<result column="categoryid" property="categoryid" jdbcType="INTEGER" />
		<result column="ym" property="ym" jdbcType="VARCHAR" />
		<result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
		<result column="imgUrl" property="imgurl" jdbcType="VARCHAR" />
		<result column="author" property="author" jdbcType="VARCHAR" />
		<result column="readCount" property="readcount" jdbcType="INTEGER" />
		<result column="count" property="count" jdbcType="INTEGER" />
		<association property="tag" javaType="com.ssm.pojo.Tag">
			<id column="tid" property="id" jdbcType="INTEGER" />
			<result column="name" property="name" jdbcType="VARCHAR" />
		</association>
		<association property="category" javaType="com.ssm.pojo.Category">
			<id column="id" property="id" jdbcType="INTEGER" />
			<result column="category" property="category" jdbcType="VARCHAR" />
		</association>
		<collection property="comments" ofType="com.ssm.pojo.Comments"
			column="articleid">
			<id column="cid" property="id" jdbcType="INTEGER" />
			<result column="articleid" property="articleid" jdbcType="INTEGER" />
			<result column="userid" property="userid" jdbcType="INTEGER" />
			<result column="parentid" property="parentid" jdbcType="INTEGER" />
			<result column="ip" property="ip" jdbcType="VARCHAR" />
			<result column="ctext" property="text" jdbcType="VARCHAR" />
			<result column="parentname" property="parentname" jdbcType="VARCHAR" />
			<result column="time" property="time" jdbcType="TIMESTAMP" />

			<association property="user" javaType="com.ssm.pojo.User">
				<id column="id" property="id" jdbcType="INTEGER" />
				<result column="username" property="username" jdbcType="VARCHAR" />
				<result column="password" property="password" jdbcType="VARCHAR" />
				<result column="email" property="email" jdbcType="VARCHAR" />
				<result column="url" property="url" jdbcType="VARCHAR" />
				<result column="level" jdbcType="VARCHAR" property="level" />
				<result column="status" jdbcType="VARCHAR" property="status" />
				<result column="registertime" jdbcType="TIMESTAMP" property="registertime" />
			</association>

		</collection>
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.ssm.pojo.Article"
		extends="BaseResultMap">
		<result column="text" property="text" jdbcType="LONGVARCHAR" />
		<result column="html" property="html" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, title, des, keywords, content, tagid, categoryid,
		ym,
		createTime, updateTime,
		imgUrl, author, readCount
	</sql>
	<sql id="Blob_Column_List">
		text,html
	</sql>
	
	<select id="selectArtilceNewOne" resultMap="ResultMapWithBLOBs">
	select * from article order by createtime  desc limit 1
	</select>
	
	<!-- 首页文章，时间降序 -->
	<select id="selectArticle" resultMap="ResultMapWithBLOBs">
		SELECT
		A.*, t.id as
		tid,t.name, ifnull(AC.comment_count, 0) AS count
		FROM
		article A
		LEFT JOIN
		(
		SELECT
		articleid,
		count(1) AS comment_count
		FROM
		comments where parentid=0
		GROUP BY
		articleid
		) AC ON A.id = AC.articleid
		LEFT JOIN tag t ON t.id = A.tagid
		ORDER BY
		A.createtime DESC
	</select>
	<!-- 文章排行 -->
	<select id="selectArticleRank" resultMap="ResultMapWithBLOBs">
		select
		id,title,readcount from article order by readcount desc limit 5
	</select>
	<!-- 最新文章 -->

	<select id="selectArticleNew" resultMap="ResultMapWithBLOBs">
		select
		id,title,createtime from article order by
		createtime desc limit 5
	</select>
	<!-- 查询文章总数 -->
	<select id="selectArticleCount" resultType="java.lang.Integer">
		select count(*) from
		article
	</select>

	<select id="selectArticleToDay" resultType="java.lang.Integer">
		SELECT count(*) FROM
		article WHERE TO_DAYS(createTime) = TO_DAYS(NOW())
	</select>

	<select id="selectArticleYesterDay" resultType="java.lang.Integer">
		SELECT count(*) FROM article WHERE TO_DAYS(NOW()) - TO_DAYS(createTime) = 1
	</select>

	<select id="selectArticleWeek" resultType="java.lang.Integer">
		SELECT count(*) FROM article where      
	
	YEARWEEK(date_format(createtime,'%Y-%m-%d')) = YEARWEEK(now())

	</select>
	
	<select id="selectArticleMonth" resultType="java.lang.Integer">
	SELECT count(*) FROM article WHERE DATE_FORMAT(createTime, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')
	</select>

	<!-- 根据id查询文章 -->
	<select id="selectArticleByID" resultMap="ResultMapWithBLOBs">
		select * from
		article
		where id=#{id}

	</select>

	<!-- 根据标签查文章 -->
	<select id="selectArticleByTag" parameterType="java.lang.String"
		resultMap="ResultMapWithBLOBs">
		SELECT
		A.*, t.id as
		tid,t.name, ifnull(AC.comment_count, 0) AS count
		FROM
		article A
		LEFT JOIN
		(
		SELECT
		articleid,
		count(1) AS comment_count 
		FROM
		comments where parentid=0
		GROUP BY
		articleid
		) AC ON A.id = AC.articleid
		LEFT JOIN tag t ON t.id = A.tagid where t.name=#{tagname}
		ORDER BY
		A.createtime DESC
	</select>

	<!--只查文章 -->
	<select id="findArticle" resultMap="ResultMapWithBLOBs">
		select * from article
	</select>


	<delete id="deleteByTagId" parameterType="java.lang.Integer">
		delete from article where tagid=#{tagid}
	</delete>

	<!-- 根据id查询文章 -->
	<select id="selectArticleAndTag" resultMap="ResultMapWithBLOBs">
		select a.*,t.id as
		tid,t.name from
		article a,tag t
		where a.tagid=t.id and a.id=#{id}

	</select>


	<select id="conditionalQueryArticle" resultMap="ResultMapWithBLOBs"
		parameterType="java.util.HashMap">
		SELECT
		A.*, t.id as tid,t.name, ifnull(AC.comment_count, 0) AS count
		FROM
		article A
		LEFT JOIN (
		SELECT
		articleid,
		count(1) AS comment_count
		FROM
		comments
		GROUP BY
		articleid
		) AC ON A.id = AC.articleid
		LEFT JOIN tag t ON
		t.id = A.tagid where 1=1

		<if test="datemin!=null and datemin!=''">
			 <![CDATA[  AND createtime >= #{datemin} ]]>
		</if>
		<if test="datemax!=null and datemax!=''">
				 <![CDATA[  AND createtime <= #{datemax} ]]>
		</if>
		<if test="title!=null and title!=''">
			and title = #{title}
		</if>

		ORDER BY
		A.createtime DESC
	</select>

	<select id="selectArticleEcharts" resultType="java.util.HashMap">
		SELECT
		DATE_FORMAT(createtime, '%Y-%m-%d') as time,
		count(createtime) AS
		num
		FROM
		article
		where
		DATE_FORMAT(createtime, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' )
		GROUP BY
		DATE_FORMAT(createtime, '%Y-%m-%d')


	</select>
	
	
	<select id="selectArticleEchartsMonthOfYear" resultType="java.util.HashMap">
	SELECT
		DATE_FORMAT(createtime, '%Y-%m') as time,
		count(createtime) AS
		num
		FROM
		article
		GROUP BY
		DATE_FORMAT(createtime, '%Y-%m')
	</select>
	
	


	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from article
		where id = #{id,jdbcType=INTEGER}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		article
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.ssm.pojo.Article">
		insert into article (id,
		title, des,
		keywords, content, tagid,
		categoryid, ym,
		createTime,
		updateTime, imgUrl, author,
		readCount, text,html)
		values
		(#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
		#{des,jdbcType=VARCHAR},
		#{keywords,jdbcType=VARCHAR},
		#{content,jdbcType=VARCHAR}, #{tagid,jdbcType=INTEGER},
		#{categoryid,jdbcType=INTEGER}, #{ym,jdbcType=VARCHAR},
		#{createtime,jdbcType=TIMESTAMP},
		#{updatetime,jdbcType=TIMESTAMP},
		#{imgurl,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR},
		#{readcount,jdbcType=INTEGER},
		#{text,jdbcType=LONGVARCHAR},#{html,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.ssm.pojo.Article">
		insert into article
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="des != null">
				des,
			</if>
			<if test="keywords != null">
				keywords,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="tagid != null">
				tagid,
			</if>
			<if test="categoryid != null">
				categoryid,
			</if>
			<if test="ym != null">
				ym,
			</if>
			<if test="createtime != null">
				createTime,
			</if>
			<if test="updatetime != null">
				updateTime,
			</if>
			<if test="imgurl != null">
				imgUrl,
			</if>
			<if test="author != null">
				author,
			</if>
			<if test="readcount != null">
				readCount,
			</if>
			<if test="text != null">
				text,
			</if>
			<if test="html != null">
				html,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="des != null">
				#{des,jdbcType=VARCHAR},
			</if>
			<if test="keywords != null">
				#{keywords,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="tagid != null">
				#{tagid,jdbcType=INTEGER},
			</if>
			<if test="categoryid != null">
				#{categoryid,jdbcType=INTEGER},
			</if>
			<if test="ym != null">
				#{ym,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				#{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="imgurl != null">
				#{imgurl,jdbcType=VARCHAR},
			</if>
			<if test="author != null">
				#{author,jdbcType=VARCHAR},
			</if>
			<if test="readcount != null">
				#{readcount,jdbcType=INTEGER},
			</if>
			<if test="text != null">
				#{text,jdbcType=LONGVARCHAR},
			</if>
			<if test="html != null">
				#{html,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ssm.pojo.Article">
		update article
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="des != null">
				des = #{des,jdbcType=VARCHAR},
			</if>
			<if test="keywords != null">
				keywords = #{keywords,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="tagid != null">
				tagid = #{tagid,jdbcType=INTEGER},
			</if>
			<if test="categoryid != null">
				categoryid = #{categoryid,jdbcType=INTEGER},
			</if>
			<if test="ym != null">
				ym = #{ym,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				createTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				updateTime = #{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="imgurl != null">
				imgUrl = #{imgurl,jdbcType=VARCHAR},
			</if>
			<if test="author != null">
				author = #{author,jdbcType=VARCHAR},
			</if>
			<if test="readcount != null">
				readCount = #{readcount,jdbcType=INTEGER},
			</if>
			<if test="text != null">
				text = #{text,jdbcType=LONGVARCHAR},
			</if>
			<if test="html != null">
				html = #{html,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ssm.pojo.Article">
		update
		article
		set title = #{title,jdbcType=VARCHAR},
		des =
		#{des,jdbcType=VARCHAR},
		keywords = #{keywords,jdbcType=VARCHAR},
		content = #{content,jdbcType=VARCHAR},
		tagid =
		#{tagid,jdbcType=INTEGER},
		categoryid = #{categoryid,jdbcType=INTEGER},
		ym = #{ym,jdbcType=VARCHAR},
		createTime =
		#{createtime,jdbcType=TIMESTAMP},
		updateTime =
		#{updatetime,jdbcType=TIMESTAMP},
		imgUrl = #{imgurl,jdbcType=VARCHAR},
		author = #{author,jdbcType=VARCHAR},
		readCount =
		#{readcount,jdbcType=INTEGER},
		text = #{text,jdbcType=LONGVARCHAR},
		html = #{html,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ssm.pojo.Article">
		update article
		set
		title = #{title,jdbcType=VARCHAR},
		des = #{des,jdbcType=VARCHAR},
		keywords = #{keywords,jdbcType=VARCHAR},
		content =
		#{content,jdbcType=VARCHAR},
		tagid = #{tagid,jdbcType=INTEGER},
		categoryid = #{categoryid,jdbcType=INTEGER},
		ym =
		#{ym,jdbcType=VARCHAR},
		createTime =
		#{createtime,jdbcType=TIMESTAMP},
		updateTime =
		#{updatetime,jdbcType=TIMESTAMP},
		imgUrl =
		#{imgurl,jdbcType=VARCHAR},
		author = #{author,jdbcType=VARCHAR},
		readCount =
		#{readcount,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
</mapper>