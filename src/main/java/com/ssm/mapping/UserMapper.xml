<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.ssm.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="registertime" jdbcType="TIMESTAMP" property="registertime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, email, url, level, status, registertime
  </sql>
  
  
  
  
  
  
  <select id="userCount" resultType="java.lang.Integer">
  select count(*) from user
  </select>
  
 
  
  <select id="registerCheck" parameterType="String" resultMap="BaseResultMap">
  select email from user where email=#{email};
  </select>
  
  
    <select id="loginCheck" parameterType="String" resultMap="BaseResultMap">
  	select * from user where email=#{email} and password=#{password};
  </select>
  
  
  <select id="selectUser" resultMap="BaseResultMap">
  select * from user
  </select>
  
  
  <select id="conditionalQueryUser" resultMap="BaseResultMap"
		parameterType="java.util.HashMap">
		select * from user where 1=1

		<if test="datemin!=null and datemin!=''">
			 <![CDATA[  AND registertime >= #{datemin} ]]>
		</if>
		<if test="datemax!=null and datemax!=''">
				 <![CDATA[  AND registertime <= #{datemax} ]]>
		</if>
		<if test="username!=null and username!=''">
			and username = #{username}
		</if>

	</select>
  
  	<select id="checkAdminLogin" parameterType="String"  resultMap="BaseResultMap">
  	select * from user where email=#{email} and password=#{password} and level='管理员'
  	</select>
  
	<select id="selectUserTotal" resultType="java.lang.Integer">
		SELECT count(*) FROM
		user
	</select>
	
	<select id="selectUserToDay" resultType="java.lang.Integer">
		SELECT count(*) FROM
		user WHERE TO_DAYS(registertime) = TO_DAYS(NOW())
	</select>

	<select id="selectUserYesterDay" resultType="java.lang.Integer">
		SELECT count(*) FROM user WHERE TO_DAYS(NOW()) - TO_DAYS(registertime) = 1
	
	</select>

	<select id="selectUserWeek" resultType="java.lang.Integer">
		SELECT count(*) FROM user where
		YEARWEEK(date_format(registertime,'%Y-%m-%d')) = YEARWEEK(now())
  
	</select>
	
	<select id="selectUserMonth" resultType="java.lang.Integer">
	SELECT count(*) FROM user WHERE DATE_FORMAT(registertime, '%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m')

	</select>
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ssm.pojo.User">
    insert into user (id, username, password, 
      email, url, level, 
      status, registertime)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{registertime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="registertime != null">
        registertime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="registertime != null">
        #{registertime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.pojo.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="registertime != null">
        registertime = #{registertime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.pojo.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      registertime = #{registertime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>